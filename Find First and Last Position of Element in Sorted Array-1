class Solution {
public:
    int first_last(vector<int>& nums, int val, bool flag){
        int mid, l = 0, r = nums.size() - 1;
        int in = -1;
        while(l <= r)
        {
            mid = l + (r - l)/2;
            if(nums[mid] == val){
                in = mid;
                if(flag) r = mid - 1;
                else l = mid + 1;
            }
            else if(nums[mid] > val) r = mid - 1;
            else l = mid + 1;
        }
        return in;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        int a = first_last(nums, target, 1);
        return (a == -1 ? vector<int> {-1, -1} : vector<int> {a, first_last(nums, target, 0)});
    }
};
