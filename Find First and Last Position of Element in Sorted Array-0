class Solution {
    int search(vector<int>& nums, int target){
        int mid, l = 0, r = nums.size()-1, result = -1;
        while(l <= r){
            mid = l + (r - l)/2;
            //for searching element if it exists and the starting point of occurence
            if(nums[mid] == target){
                result = mid;
                r = mid-1;
            }
            else if(nums[mid] > target) r = mid-1;
            else l = mid+1;
        }
        return result;
    }
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int i, x = search(nums, target);
        vector<int> v(2, -1);
        if(x == -1){
            return v;
        }
        v[0] = x;
        for(i = x; i < nums.size(); i++){
            if(nums[i] != target){
                v[1] = i - 1;
                return v;
            }
        }
        v[1] = i - 1;
        return v;
    }
};
