class Solution {
public:
    void qSort(vector<int>& nums, int low, int high){
        if(low<high){
            int pi=partition(nums, low, high);
            qSort(nums, low, pi-1);
            qSort(nums, pi+1, high);
        }
    }
    void swap(int *a, int *b){
        int t=*a;
        *a=*b;
        *b=t;
    }
    int partition(vector<int>& nums, int low, int high){
        int i=low-1;
        for(int j=low; j<high; j++){
            if(nums[j]<nums[high]){
                i++;
                swap(&nums[i],&nums[j]);
            }
        }
        swap(&nums[i+1], &nums[high]);
        return i+1;
    }
    vector<int> sortArray(vector<int>& nums){
        qSort(nums, 0, nums.size()-1);
        return nums;
    }
};
